-- StarterPlayer/StarterPlayerScripts/CommandStuff/ChatMuteHandler (LocalScript)
local Players = game:GetService("Players")
local TextChatService = game:GetService("TextChatService")
local Player = Players.LocalPlayer

-- Wait for Actions to be ready (not strictly needed here, but added for consistency)
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Actions = ReplicatedStorage:WaitForChild("Actions")

-- Wait for DataManager to replicate IsMuted
local function getIsMuted()
	local data = Player:WaitForChild("Data", 10) -- Folder to hold player data
	if data then
		return data:WaitForChild("IsMuted", 5).Value
	end
	return false -- Default to unmuted if data isnâ€™t found
end

TextChatService.OnIncomingMessage = function(messageData)
	local properties = Instance.new("TextChatMessageProperties")
	properties.Text = messageData.Text or ""

	if messageData.TextSource and messageData.TextSource.UserId == Player.UserId then
		if getIsMuted() then
			properties.Text = "" -- Suppress the player's own message if muted
		end
	end
	return properties
end