-- StarterGui/PlayerPanelGUI/PlayerPanelGUIScript
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local ContextActionService = game:GetService("ContextActionService")
local PlayerGui = Players.LocalPlayer:WaitForChild("PlayerGui")

local Actions = ReplicatedStorage:WaitForChild("Actions")
local ToggleInventoryEvent = Actions:WaitForChild("ToggleInventory")
local AddItemEvent = Actions:WaitForChild("AddItem")
local RearrangeInventoryEvent = Actions:WaitForChild("RearrangeInventory")
local EquipItemEvent = Actions:WaitForChild("EquipItem")
local DropItemEvent = Actions:WaitForChild("DropItem")
local ItemDatabase = require(ReplicatedStorage:WaitForChild("Configs"):WaitForChild("ItemDatabase"))
local Keybinds = require(ReplicatedStorage:WaitForChild("Configs"):WaitForChild("Keybinds"))

print("[Level Up Larry] PlayerPanelGUIScript starting")

if script.Parent:FindFirstChild("PlayerPanelGUIScriptInitialized") then
	print("[Level Up Larry] Player panel script already initialized, exiting")
	return
end
local initMarker = Instance.new("BoolValue")
initMarker.Name = "PlayerPanelGUIScriptInitialized"
initMarker.Value = true
initMarker.Parent = script.Parent

local playerPanelGui = script.Parent
playerPanelGui.Name = "PlayerPanelGUI"
playerPanelGui.ResetOnSpawn = true
playerPanelGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

local panelFrame
local tabsFrame
local contentFrame
local tabs = {}
local currentTab = nil
local currentInventory = {} -- Store inventory data locally

local FRAME_WIDTH = 300
local FRAME_HEIGHT = 480
local SLOT_SIZE = 50
local SLOT_PADDING = 10
local MAX_INVENTORY_SLOTS = 28
local BORDER_SIZE = 10
local DARK_GREY_COLOR = Color3.fromRGB(50, 50, 50)
local BUTTON_BG_COLOR = Color3.fromRGB(30, 30, 30)
local PLACEHOLDER_IMAGE = "rbxassetid://1234567890" -- Replace with a valid placeholder asset ID

local inventorySlots = {}
local equipmentSlots = {}

local function setupGui()
	print("[Level Up Larry] Setting up GUI")
	panelFrame = playerPanelGui:FindFirstChild("PanelFrame") or Instance.new("Frame")
	panelFrame.Name = "PanelFrame"
	panelFrame.Size = UDim2.new(0, FRAME_WIDTH, 0, FRAME_HEIGHT)
	panelFrame.Position = UDim2.new(1, -FRAME_WIDTH - 10, 0.5, -FRAME_HEIGHT / 2)
	panelFrame.BackgroundColor3 = DARK_GREY_COLOR
	panelFrame.BorderSizePixel = 0
	panelFrame.Active = true
	panelFrame.Draggable = false
	panelFrame.ZIndex = 2
	panelFrame.Parent = playerPanelGui
	panelFrame.Visible = false

	local innerFrame = panelFrame:FindFirstChild("InnerFrame") or Instance.new("Frame")
	innerFrame.Name = "InnerFrame"
	innerFrame.Size = UDim2.new(1, -2 * BORDER_SIZE, 1, -2 * BORDER_SIZE)
	innerFrame.Position = UDim2.new(0, BORDER_SIZE, 0, BORDER_SIZE)
	innerFrame.BackgroundColor3 = Color3.fromRGB(62, 53, 41)
	innerFrame.BorderSizePixel = 0
	innerFrame.ZIndex = 2
	innerFrame.Parent = panelFrame

	contentFrame = innerFrame:FindFirstChild("ContentFrame") or Instance.new("Frame")
	contentFrame.Name = "ContentFrame"
	contentFrame.Size = UDim2.new(1, 0, 1, 0)
	contentFrame.BackgroundTransparency = 1
	contentFrame.ZIndex = 2
	contentFrame.Parent = innerFrame

	tabsFrame = innerFrame:FindFirstChild("TabsFrame") or Instance.new("Frame")
	tabsFrame.Name = "TabsFrame"
	tabsFrame.Size = UDim2.new(0, 50, 1, 0)
	tabsFrame.Position = UDim2.new(1, -50, 0, 0)
	tabsFrame.BackgroundTransparency = 1
	tabsFrame.ZIndex = 2
	tabsFrame.Parent = innerFrame

	local lockButton = tabsFrame:FindFirstChild("LockButton") or Instance.new("TextButton")
	lockButton.Name = "LockButton"
	lockButton.Size = UDim2.new(0, 30, 0, 30)
	lockButton.Position = UDim2.new(0, 10, 1, -40)
	lockButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
	lockButton.Text = "🔒"
	lockButton.TextColor3 = Color3.fromRGB(255, 255, 255)
	lockButton.ZIndex = 3
	lockButton.Parent = tabsFrame

	local isLocked = true
	lockButton.MouseButton1Click:Connect(function()
		isLocked = not isLocked
		lockButton.BackgroundColor3 = isLocked and Color3.fromRGB(255, 0, 0) or Color3.fromRGB(0, 255, 0)
		lockButton.Text = isLocked and "🔒" or "🔓"
		panelFrame.Draggable = not isLocked
		print("[Level Up Larry] Player panel dragging " .. (isLocked and "locked" or "unlocked"))
	end)
	print("[Level Up Larry] GUI setup complete")
end

setupGui()

local function updateInventoryDisplay(inventory, equipment)
	print("[Level Up Larry] Updating Inventory display")
	currentInventory = inventory or currentInventory -- Ensure currentInventory is updated
	for i = 1, MAX_INVENTORY_SLOTS do
		local slot = inventorySlots[i]
		slot.ItemImage.Image = ""
		slot.AmountLabel.Text = ""
		if inventory[i] then
			local item = ItemDatabase[inventory[i].itemId]
			slot.ItemImage.Image = item.icon or PLACEHOLDER_IMAGE
			slot.ItemImage.ImageTransparency = 0
			slot.AmountLabel.Text = item.stackable and tostring(inventory[i].quantity) or ""
			print("[Level Up Larry] Updated slot " .. i .. " with " .. item.name .. " x" .. inventory[i].quantity)
		else
			print("[Level Up Larry] Slot " .. i .. " is empty")
		end
	end

	for slotName, slot in pairs(equipmentSlots) do
		slot.ItemImage.Image = ""
		if equipment[slotName] then
			local item = ItemDatabase[equipment[slotName].itemId]
			slot.ItemImage.Image = item.icon or PLACEHOLDER_IMAGE
			slot.ItemImage.ImageTransparency = 0
		end
	end
end

local inventoryKey = Keybinds.InventoryToggle or Enum.KeyCode.C
print("[Level Up Larry] Inventory keybind set to: " .. tostring(inventoryKey))

UserInputService.InputBegan:Connect(function(input)
	print("[Level Up Larry] Input detected: " .. tostring(input.KeyCode))
	if input.KeyCode == inventoryKey then
		panelFrame.Visible = not panelFrame.Visible
		print("[Level Up Larry] Player panel toggled via key: " .. tostring(panelFrame.Visible))
		if panelFrame.Visible then
			game.ReplicatedStorage.Actions.UpdateInventory:FireServer()
		end
	end
end)

local function createTab(name, iconText, setupFunction)
	print("[Level Up Larry] Creating tab: " .. name)
	local button = Instance.new("TextButton")
	button.Name = name .. "Button"
	button.Size = UDim2.new(0, 40, 0, 40)
	button.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
	button.Text = iconText
	button.TextColor3 = Color3.fromRGB(255, 255, 255)
	button.ZIndex = 3
	button.Parent = tabsFrame

	local tabFrame = Instance.new("Frame")
	tabFrame.Name = name .. "Tab"
	tabFrame.Size = UDim2.new(1, -50, 1, 0)
	tabFrame.Position = UDim2.new(0, 0, 0, 0)
	tabFrame.BackgroundTransparency = 1
	tabFrame.ZIndex = 2
	tabFrame.Parent = contentFrame
	tabFrame.Visible = false

	local function switchToTab()
		if currentTab == name then return end
		if currentTab then
			tabs[currentTab].Frame.Visible = false
		end
		tabFrame.Visible = true
		currentTab = name
		print("[Level Up Larry] Switched to " .. name .. " tab")
	end

	button.MouseButton1Click:Connect(switchToTab)

	tabs[name] = { Button = button, Frame = tabFrame, Setup = setupFunction, Switch = switchToTab }
	setupFunction()
	print("[Level Up Larry] Tab " .. name .. " created")
end

local function setupInventoryTab()
	print("[Level Up Larry] Setting up Inventory tab")
	local inventoryFrame = Instance.new("Frame")
	inventoryFrame.Name = "InventoryFrame"
	inventoryFrame.Size = UDim2.new(0, 230, 0, 390)
	inventoryFrame.Position = UDim2.new(0.5, -115, 0, 10)
	inventoryFrame.BackgroundColor3 = Color3.fromRGB(62, 53, 41)
	inventoryFrame.BorderSizePixel = 0
	inventoryFrame.ZIndex = 2
	inventoryFrame.Parent = tabs["Inventory"].Frame

	local grid = Instance.new("Frame")
	grid.Name = "InventoryGrid"
	grid.Size = UDim2.new(0, 230, 0, 390)
	grid.Position = UDim2.new(0, 10, 0, 10)
	grid.BackgroundTransparency = 1
	grid.ZIndex = 2
	grid.Parent = inventoryFrame

	local uiGrid = Instance.new("UIGridLayout")
	uiGrid.Parent = grid
	uiGrid.CellSize = UDim2.new(0, SLOT_SIZE, 0, SLOT_SIZE)
	uiGrid.CellPadding = UDim2.new(0, SLOT_PADDING, 0, SLOT_PADDING)
	uiGrid.FillDirection = Enum.FillDirection.Horizontal
	uiGrid.HorizontalAlignment = Enum.HorizontalAlignment.Left
	uiGrid.VerticalAlignment = Enum.VerticalAlignment.Top
	uiGrid.SortOrder = Enum.SortOrder.LayoutOrder
	uiGrid.FillDirectionMaxCells = 4

	for i = 1, MAX_INVENTORY_SLOTS do
		local slot = Instance.new("Frame")
		slot.Name = "InventorySlot" .. i
		slot.Size = UDim2.new(0, SLOT_SIZE, 0, SLOT_SIZE)
		slot.BackgroundColor3 = Color3.fromRGB(205, 174, 121)
		slot.BorderSizePixel = 1
		slot.BorderColor3 = Color3.fromRGB(0, 0, 0)
		slot.ZIndex = 2
		slot.Parent = grid
		slot.LayoutOrder = i - 1

		local itemImage = Instance.new("ImageLabel")
		itemImage.Name = "ItemImage"
		itemImage.Size = UDim2.new(1, 0, 1, 0)
		itemImage.BackgroundTransparency = 1
		itemImage.Image = ""
		itemImage.ZIndex = 3
		itemImage.Parent = slot

		local amountLabel = Instance.new("TextLabel")
		amountLabel.Name = "AmountLabel"
		amountLabel.Size = UDim2.new(0, 20, 0, 20)
		amountLabel.Position = UDim2.new(0.6, 0, 0, 0)
		amountLabel.Text = ""
		amountLabel.TextColor3 = Color3.fromRGB(255, 255, 0)
		amountLabel.TextSize = 14
		amountLabel.BackgroundTransparency = 1
		amountLabel.ZIndex = 4
		amountLabel.Parent = slot

		local highlight = Instance.new("Frame")
		highlight.Name = "Highlight"
		highlight.Size = UDim2.new(1, 0, 1, 0)
		highlight.BackgroundColor3 = Color3.fromRGB(255, 255, 0)
		highlight.BackgroundTransparency = 0.7
		highlight.ZIndex = 2
		highlight.Parent = slot
		highlight.Visible = false

		inventorySlots[i] = { Frame = slot, ItemImage = itemImage, AmountLabel = amountLabel, Highlight = highlight }
	end

	local draggingSlot = nil
	local dragImage = nil

	for i, slot in pairs(inventorySlots) do
		slot.Frame.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 then
				draggingSlot = i
				dragImage = slot.ItemImage:Clone()
				dragImage.Parent = playerPanelGui
				dragImage.ZIndex = 10
				slot.ItemImage.ImageTransparency = 0.5
				print("[Level Up Larry] Started dragging item from slot " .. i)
			elseif input.UserInputType == Enum.UserInputType.MouseButton2 then
				if currentInventory[i] then
					local item = ItemDatabase[currentInventory[i].itemId]
					local menu = Instance.new("Frame")
					menu.Name = "ContextMenu"
					menu.Size = UDim2.new(0, 100, 0, 120)
					menu.Position = UDim2.new(0, input.Position.X, 0, input.Position.Y)
					menu.BackgroundColor3 = Color3.fromRGB(62, 53, 41)
					menu.ZIndex = 5
					menu.Parent = playerPanelGui

					local options = {"Use", "Drop", "Examine"}
					if item.equipSlot then
						table.insert(options, "Equip")
					end

					for j, option in ipairs(options) do
						local button = Instance.new("TextButton")
						button.Name = option
						button.Size = UDim2.new(1, 0, 0, 30)
						button.Position = UDim2.new(0, 0, 0, (j - 1) * 30)
						button.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
						button.Text = option
						button.TextColor3 = Color3.fromRGB(255, 255, 255)
						button.ZIndex = 6
						button.Parent = menu

						button.MouseButton1Click:Connect(function()
							if option == "Use" then
								-- Implement use logic here
							elseif option == "Drop" then
								DropItemEvent:FireServer(i)
							elseif option == "Examine" then
								print("[Level Up Larry] Examine: " .. item.examine)
							elseif option == "Equip" then
								EquipItemEvent:FireServer(i)
							end
							menu:Destroy()
						end)
					end

					local function closeMenu(_, state)
						if state == Enum.UserInputState.Begin then
							menu:Destroy()
							ContextActionService:UnbindAction("CloseMenu")
						end
					end
					ContextActionService:BindAction("CloseMenu", closeMenu, false, Enum.UserInputType.MouseButton1, Enum.UserInputType.MouseButton2)
				end
			end
		end)
	end

	UserInputService.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement and draggingSlot then
			local mousePos = UserInputService:GetMouseLocation()
			dragImage.Position = UDim2.new(0, mousePos.X - SLOT_SIZE / 2, 0, mousePos.Y - SLOT_SIZE / 2)
			for j, otherSlot in pairs(inventorySlots) do
				if j ~= draggingSlot then
					local pos = otherSlot.Frame.AbsolutePosition
					local size = otherSlot.Frame.AbsoluteSize
					local isOver = mousePos.X >= pos.X and mousePos.X <= pos.X + size.X and
						mousePos.Y >= pos.Y and mousePos.Y <= pos.Y + size.Y
					otherSlot.Highlight.Visible = isOver
					if isOver then
						print("[Level Up Larry] Dragging over slot " .. j .. " at " .. tostring(pos))
					end
				end
			end
		end
	end)

	UserInputService.InputEnded:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 and draggingSlot then
			local mousePos = UserInputService:GetMouseLocation()
			local targetSlot = nil
			for j, otherSlot in pairs(inventorySlots) do
				if j ~= draggingSlot then
					local pos = otherSlot.Frame.AbsolutePosition
					local size = otherSlot.Frame.AbsoluteSize
					if mousePos.X >= pos.X and mousePos.X <= pos.X + size.X and
						mousePos.Y >= pos.Y and mousePos.Y <= pos.Y + size.Y then
						targetSlot = j
						print("[Level Up Larry] Detected drop on slot " .. j .. " at " .. tostring(pos))
						break
					end
				end
			end
			if targetSlot then
				RearrangeInventoryEvent:FireServer(draggingSlot, targetSlot)
				wait(0.1) -- Small delay to ensure server updates
				game.ReplicatedStorage.Actions.UpdateInventory:FireServer() -- Refresh inventory
			else
				print("[Level Up Larry] Dropped item from slot " .. draggingSlot .. " outside inventory - keeping item")
			end
			inventorySlots[draggingSlot].ItemImage.ImageTransparency = 0
			dragImage:Destroy()
			draggingSlot = nil
			dragImage = nil
			for _, otherSlot in pairs(inventorySlots) do
				otherSlot.Highlight.Visible = false
			end
		end
	end)

	print("[Level Up Larry] Inventory tab setup complete")
end

local function setupStatsTab()
	print("[Level Up Larry] Setting up Stats tab")
	local statsFrame = Instance.new("Frame")
	statsFrame.Name = "StatsFrame"
	statsFrame.Size = UDim2.new(0, 230, 0, 390)
	statsFrame.Position = UDim2.new(0.5, -115, 0, 10)
	statsFrame.BackgroundColor3 = Color3.fromRGB(62, 53, 41)
	statsFrame.BorderSizePixel = 0
	statsFrame.ZIndex = 2
	statsFrame.Parent = tabs["Stats"].Frame

	-- Placeholder for stats tab (to be implemented)
	print("[Level Up Larry] Stats tab setup complete")
end

local function setupEquipmentTab()
	print("[Level Up Larry] Setting up Equipment tab")
	local equipFrame = Instance.new("Frame")
	equipFrame.Name = "EquipmentFrame"
	equipFrame.Size = UDim2.new(0, 230, 0, 390)
	equipFrame.Position = UDim2.new(0.5, -115, 0, 10)
	equipFrame.BackgroundColor3 = Color3.fromRGB(62, 53, 41)
	equipFrame.BorderSizePixel = 0
	equipFrame.ZIndex = 2
	equipFrame.Parent = tabs["Equipment"].Frame

	local slots = {
		{name = "Head", pos = UDim2.new(0.5, -25, 0, 20)},
		{name = "Cape", pos = UDim2.new(0, 10, 0, 20)},
		{name = "Neck", pos = UDim2.new(1, -60, 0, 20)},
		{name = "Weapon", pos = UDim2.new(0, 10, 0, 100)},
		{name = "Body", pos = UDim2.new(0.5, -25, 0, 100)},
		{name = "Shield", pos = UDim2.new(1, -60, 0, 100)},
		{name = "Legs", pos = UDim2.new(0.5, -25, 0, 180)},
		{name = "Hands", pos = UDim2.new(0, 10, 0, 260)},
		{name = "Feet", pos = UDim2.new(0.5, -25, 0, 260)},
		{name = "Ring", pos = UDim2.new(1, -60, 0, 260)},
		{name = "Ammo", pos = UDim2.new(0, 10, 0, 340)}
	}

	for _, slot in pairs(slots) do
		local slotFrame = Instance.new("Frame")
		slotFrame.Name = slot.name .. "Slot"
		slotFrame.Size = UDim2.new(0, 50, 0, 50)
		slotFrame.Position = slot.pos
		slotFrame.BackgroundColor3 = Color3.fromRGB(205, 174, 121)
		slotFrame.BorderSizePixel = 1
		slotFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
		slotFrame.ZIndex = 2
		slotFrame.Parent = equipFrame

		local itemImage = Instance.new("ImageLabel")
		itemImage.Name = "ItemImage"
		itemImage.Size = UDim2.new(1, 0, 1, 0)
		itemImage.BackgroundTransparency = 1
		itemImage.Image = ""
		itemImage.ZIndex = 3
		itemImage.Parent = slotFrame

		equipmentSlots[slot.name] = { Frame = slotFrame, ItemImage = itemImage }
	end

	print("[Level Up Larry] Equipment tab setup complete")
end

print("[Level Up Larry] Initializing tabs")
createTab("Inventory", "🎒", setupInventoryTab)
createTab("Stats", "⭐", setupStatsTab)
createTab("Equipment", "⚔️", setupEquipmentTab)

print("[Level Up Larry] Positioning tab buttons")
local buttonCount = 0
for _, tab in pairs(tabs) do
	tab.Button.Position = UDim2.new(0, 5, 0, buttonCount * 50)
	buttonCount = buttonCount + 1
end

tabs["Inventory"].Switch()

AddItemEvent.OnClientEvent:Connect(function(inventory, equipment)
	currentInventory = inventory
	updateInventoryDisplay(inventory, equipment)
end)

ToggleInventoryEvent.OnClientEvent:Connect(function(show)
	print("[Level Up Larry] ToggleInventoryEvent received: " .. tostring(show))
	panelFrame.Visible = show
	print("[Level Up Larry] Player panel toggled: " .. tostring(show))
	if show then
		game.ReplicatedStorage.Actions.UpdateInventory:FireServer()
	end
end)

spawn(function()
	while true do
		wait(2)
		if playerPanelGui.Parent then
			game.ReplicatedStorage.Actions.UpdateInventory:FireServer()
			print("[Level Up Larry] Auto-refreshed inventory")
		else
			break
		end
	end
end)

print("[Level Up Larry] PlayerPanelGUIScript fully initialized")